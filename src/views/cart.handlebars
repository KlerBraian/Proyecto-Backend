<main>
    {{#if isLoggedIn}}
    <h1 class="titulo" id="titulo">Carrito de Compras</h1>
    <button class="options return">
        <a href="/">Volver</a>
    </button>
    {{#if products.length}}
    <div class="productos-cart">
        {{#each products}}
        <div class="producto">
            <h3 class="producto-title">{{product.title}}</h3>
            <img src="{{product.thumbnail}}" alt="">
            <p class="producto-price">${{product.price}}</p>
            <p class="producto-categoria">Categoría: {{product.category}}</p>
            <p class="producto-description">{{product.description}}</p>
            <p class="producto-description">Stock: {{product.stock}}</p>
            <p class="producto-description">Cantidad seleccionada: {{quantity}}</p>
            <p class="producto-description">Subtotal: ${{subtotal}}</p> <!-- Mostrar subtotal de cada producto -->
            <h1>{{cartId}}</h1>
            <form class="eliminar-carrito" onsubmit="updateProductQuantity(event, '{{product._id}}', '{{../cartId}}')">
                <label for="quantity">Cantidad a modificar:</label>
                <input type="number" name="quantity" min="1" value="1" />
                <!-- Botón para actualizar la cantidad -->
                <button class="modify" type="submit">Modificar Carrito</button>
            </form>
            <button class="delete" onclick="deleteProduct('{{../cartId}}', '{{product._id}}')">Eliminar
                producto</button>
        </div>
        {{/each}}

        <div class="total-carrito">
            <p>Total del carrito: ${{subtotalTotal}}</p>
         <!-- Mostrar subtotal total -->
        </div>
        <div class="pages "> <button class="vaciar" onclick="emptyCart('{{cartId}}')">Vaciar Carrito</button></div>
        <form action="/api/carts/{{cartId}}/purchase" method="POST">
              <div class="pages"><button class="vaciar">Finalizar compra</button></div></form>
  
    </div>
    {{else}}
    <p>No hay productos en el carrito.</p>
    {{/if}}
  {{else}}
    <p>Debes iniciar sesion para ver tu carrito</p>
       <a class="registro" href="/login">Loguearse/Crear cuenta</a>
  {{/if}} 
</main>
<script src=" https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.all.min.js "></script>
<script>


    function updateProductQuantity(event, productId, cartId) {
        event.preventDefault(); // Previene el envío del formulario tradicional

        // Accede al formulario desde event.target
        const form = event.target;
        const quantity = form.quantity.value; // Obtén la nueva cantidad del input
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ quantity: parseInt(quantity) })
        })
            .then(response => response.json())
            .then(data => {
                console.log("Cantidad actualizada:", data);
                Swal.fire("Producto modificado con éxito");
                setTimeout(() => {
                    location.reload(); // Recargar la página después de 2 segundos
                }, 1000); // 2000 milisegundos = 2 segundos
            })
            .catch(error => console.error("Error:", error));
    }


    function deleteProduct(cartId, productId) {
        fetch(`${cartId}/product/${productId}`, {
            method: "DELETE"
        })
            .then(response => response.json())
            .then(data => {
                console.log("Producto eliminado:", data);
                Swal.fire("Producto eliminado con éxito");
                setTimeout(() => {
                    location.reload(); // Recargar la página después de 2 segundos
                }, 1000); // 2000 milisegundos = 2 segundos
            })
            .catch(error => console.error("Error:", error));

    }

    // Función para vaciar el carrito
    function emptyCart(id_cart) {
        console.log("ID del carrito:", id_cart);

        fetch(`/api/carts/${id_cart}`, {
            method: "DELETE"
        })
            .then(response => response.json())
            .then(data => {
                console.log("Carrito vaciado:", data);
                Swal.fire("Carrito vaciado con éxito");
                setTimeout(() => {
                    location.reload(); // Recargar la página después de 2 segundos
                }, 1000); // 2000 milisegundos = 2 segundos
            })
            .catch(error => console.error("Error:", error));
    }
</script>